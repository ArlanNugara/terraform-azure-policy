trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: 'Install latest Terraform'

- task: AzureCLI@2
  displayName: 'Getting Started'
  inputs:
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform version
      pip install checkov
      curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

- task: AzureCLI@2
  displayName: 'General : Checkov'
  inputs:
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      checkov -d $(Build.Repository.LocalPath) -o junitxml | tee checkov.test.xml

- task: AzureCLI@2
  displayName: 'Terraform : FMT'
  inputs:
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform fmt -check -recursive

- task: AzureCLI@2
  displayName: 'General : TFLINT'
  inputs:
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      tflint --config .tflint.hcl --var-file=$(Build.Repository.LocalPath)/policies.auto.tfvars

- task: AzureCLI@2
  displayName: 'Terraform : INIT'
  inputs:
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform init

- task: AzureCLI@2
  displayName: 'Terraform : VALIDATE'
  inputs:
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform validate

- task: AzureCLI@2
  displayName: 'Terraform : PLAN'
  inputs:
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform init
      terraform plan -out policy.json
      terraform show -json policy.json

- task: ManualValidation@0
  timeoutInMinutes: 1440
  inputs:
    notifyUsers: |
      [org name]\group name
    instructions: 'Please validate the terraform plan and approve / reject'
    onTimeout: 'reject'

- task: AzureCLI@2
  displayName: 'Terraform : APPLY'
  retryCountOnTaskFailure: 2
  inputs:
    scriptType: bash
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      cd $(Build.Repository.LocalPath)
      terraform apply policy.json